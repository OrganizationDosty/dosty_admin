import Head from 'next/head'

import React, { useState } from 'react';
import { Form, Input, Button } from 'antd';
import { UserOutlined, LockOutlined } from '@ant-design/icons';
import styled from 'styled-components';
import {useRouter} from "next/router";

const StyledForm = styled(Form)`
  width: 300px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: #f5f5f5;
  padding: 20px;
  border-radius: 10px;
`;

export default function Home() {
    const [form] = Form.useForm();
    const [error, setError] = useState('');
    const { push} = useRouter()

    const onFinish = async ({ username, password }: {username: string, password: string}): Promise<void> => {
        if(username === 'Dosty Pet' && password === 'dostyPet123@') {
            localStorage.setItem('opala', 'true')
            await push('/dashboard/dostyPet?section=users&subSection=users')
        }else {
            setError('არასწორია ბრატ')
        }
    };

    const onFinishFailed = (errorInfo: any) => {
        setError(errorInfo.errorFields[0].errors[0]);
    };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>
        <StyledForm
            form={form}
            name="normal_login"
            className="login-form"
            onFinish={(values: any) => {
                // @ts-ignore
                (async  () => await onFinish(values))()
            }}
            onFinishFailed={onFinishFailed}
        >
            <h2>Back-Office Login</h2>
            {error && <p style={{ color: 'red' }}>{error}</p>}
            <Form.Item
                name="username"
                rules={[{ required: true, message: 'Please input your username!' }]}
            >
                <Input prefix={<UserOutlined className="site-form-item-icon" />} placeholder="Username" />
            </Form.Item>
            <Form.Item
                name="password"
                rules={[{ required: true, message: 'Please input your Password!' }]}
            >
                <Input
                    prefix={<LockOutlined className="site-form-item-icon" />}
                    type="password"

                    placeholder="Password"
                />
            </Form.Item>
            <Form.Item>
                <Button type="primary" htmlType="submit" className="login-form-button">
                    Log in
                </Button>
            </Form.Item>
        </StyledForm>
        </div>
    </>
  )
}
